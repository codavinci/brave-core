import("//brave/build/config.gni")
import("//brave/components/brave_wallet/buildflags/buildflags.gni")
import("//brave/components/brave_wallet/config.gni")

assert(brave_wallet_enabled)

source_set("brave_wallet") {
  public_deps = [ "buildflags" ]
  configs += [ ":infura_config" ]
  include_dirs = [ "//brave/third_party/ethash/src/include" ]

  sources = [
    "brave_wallet_constants.cc",
    "brave_wallet_constants.h",
    "brave_wallet_delegate.h",
    "brave_wallet_service.cc",
    "brave_wallet_service.h",
    "brave_wallet_utils.cc",
    "brave_wallet_utils.h",
    "eth_call_data_builder.cc",
    "eth_call_data_builder.h",
    "eth_json_rpc_controller.cc",
    "eth_json_rpc_controller.h",
    "eth_requests.cc",
    "eth_requests.h",
    "eth_response_parser.cc",
    "eth_response_parser.h",
    "features.cc",
    "features.h",
    "pref_names.cc",
    "pref_names.h",
  ]

  deps = [
    "//base",
    "//brave/third_party/ethash",
    "//components/keyed_service/content",
    "//components/keyed_service/core",
    "//components/prefs",
    "//components/user_prefs",
    "//content/public/browser",
    "//extensions/browser",
    "//extensions/common:common_constants",
    "//services/network/public/cpp",
    "//url",
  ]
}

config("infura_config") {
  defines = [ "BRAVE_INFURA_PROJECT_ID=\"$brave_infura_project_id\"" ]
}
